<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Add New</value>
  </data>
  <data name="AddNewComment" xml:space="preserve">
    <value>Add New Comment</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="AllArticles" xml:space="preserve">
    <value>All Articles</value>
  </data>
  <data name="AllCategories" xml:space="preserve">
    <value>All Categories</value>
  </data>
  <data name="ApplyFilter" xml:space="preserve">
    <value>Apply Filter</value>
  </data>
  <data name="ArchiveFolder" xml:space="preserve">
    <value>Archive Folder</value>
  </data>
  <data name="Archives" xml:space="preserve">
    <value>Archives</value>
  </data>
  <data name="Article" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="ArticleAdded" xml:space="preserve">
    <value>Article has successfully been added</value>
  </data>
  <data name="Articles" xml:space="preserve">
    <value>Articles</value>
  </data>
  <data name="ArticlesExistOnCategory" xml:space="preserve">
    <value>Article(s) exist on that category</value>
  </data>
  <data name="ArticlesPerPage" xml:space="preserve">
    <value>Number of Articles per Page</value>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>Author(s)</value>
  </data>
  <data name="BlogSubTitle" xml:space="preserve">
    <value>Blog's SubTitle</value>
  </data>
  <data name="BlogTitle" xml:space="preserve">
    <value>Blog's Title</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="CategoryAdded" xml:space="preserve">
    <value>Category has successfully been added</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Category Name</value>
  </data>
  <data name="CategoryNameExist" xml:space="preserve">
    <value>Category with that name already exist</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Characters" xml:space="preserve">
    <value>characters</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="CommentAdded" xml:space="preserve">
    <value>Comment has been successfully added</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="CommentsAreOff" xml:space="preserve">
    <value>Comments Are Off</value>
  </data>
  <data name="CommentsToShow" xml:space="preserve">
    <value>Number of Comments to Show</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CryptKey" xml:space="preserve">
    <value>Crypt Key</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="CurrentStatus" xml:space="preserve">
    <value>Current Status</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EnterComment" xml:space="preserve">
    <value>Please, enter a Comment</value>
  </data>
  <data name="EnterConfirmPassword" xml:space="preserve">
    <value>Please, enter confirm password</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Please, enter an e-mail</value>
  </data>
  <data name="EnterLessThan" xml:space="preserve">
    <value>Please, enter less than</value>
  </data>
  <data name="EnterName" xml:space="preserve">
    <value>Please, enter a Name</value>
  </data>
  <data name="EnterNewPassword" xml:space="preserve">
    <value>Please, enter new password</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Please, enter a password</value>
  </data>
  <data name="EnterUserName" xml:space="preserve">
    <value>Please, enter an username</value>
  </data>
  <data name="EnterValidEmail" xml:space="preserve">
    <value>Please, enter a valid e-mail</value>
  </data>
  <data name="EnterValidName" xml:space="preserve">
    <value>Please, enter a valid Name</value>
  </data>
  <data name="EnterValidURL" xml:space="preserve">
    <value>Please, enter a valid URL</value>
  </data>
  <data name="FileManager" xml:space="preserve">
    <value>File Manager</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="FileSuccessfullyUploaded" xml:space="preserve">
    <value>File has successfully been uploaded</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="HideComments" xml:space="preserve">
    <value>Hide Comments</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Blog Home</value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="ImagesFolder" xml:space="preserve">
    <value>Images Folder</value>
  </data>
  <data name="ImagesManager" xml:space="preserve">
    <value>Images Manager</value>
  </data>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>Incorrect Password</value>
  </data>
  <data name="InsertSelectedFile" xml:space="preserve">
    <value>Insert Selected File</value>
  </data>
  <data name="InsertSelectedImage" xml:space="preserve">
    <value>Insert Selected Image</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Last</value>
  </data>
  <data name="LinkAdded" xml:space="preserve">
    <value>Link has successfully been added</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
  </data>
  <data name="LinksForFilePreview" xml:space="preserve">
    <value>Click on a Name links for view/open</value>
  </data>
  <data name="LinksForImagePreview" xml:space="preserve">
    <value>Click on a Image links for full screen view</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Main" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NoArticles" xml:space="preserve">
    <value>No Articles</value>
  </data>
  <data name="NoArticleSelected" xml:space="preserve">
    <value>No Article Selected</value>
  </data>
  <data name="NoAuthorSelected" xml:space="preserve">
    <value>No Author Selected</value>
  </data>
  <data name="NoComments" xml:space="preserve">
    <value>There no Comments</value>
  </data>
  <data name="NoCommentsYet" xml:space="preserve">
    <value>No comments yet</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="PageTitleTag" xml:space="preserve">
    <value>Pages Title Tag</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>password</value>
  </data>
  <data name="PasswordChanged" xml:space="preserve">
    <value>Password has successfully been changed</value>
  </data>
  <data name="PasswordsNotMatch" xml:space="preserve">
    <value>Passwords don't match</value>
  </data>
  <data name="PostedBy" xml:space="preserve">
    <value>Posted by</value>
  </data>
  <data name="PostedIn" xml:space="preserve">
    <value>Posted in</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="ReadTheArticle" xml:space="preserve">
    <value>Read the Article</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsUpdated" xml:space="preserve">
    <value>Settings has successfully been updated</value>
  </data>
  <data name="ShowComments" xml:space="preserve">
    <value>Show Comments</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TopArticles" xml:space="preserve">
    <value>Top Articles</value>
  </data>
  <data name="TopArticlesCount" xml:space="preserve">
    <value>Number of Top Articles to Show</value>
  </data>
  <data name="TotalCount" xml:space="preserve">
    <value>Total Count</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>Unknown error occured</value>
  </data>
  <data name="UnsuccessfulLogin" xml:space="preserve">
    <value>Your attempt to login was unsuccessful. Please try again.</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>Upload File</value>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Upload Image</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>username</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewEdit" xml:space="preserve">
    <value>View/Edit</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
</root>